WEBVTT

1
00:00:01.040 --> 00:00:04.770
<v ->こんにちは、バックグラウンダーと</v>

2
00:00:04.770 --> 00:00:07.023
非対話型マイクロサービスの紹介へようこそ

3
00:00:09.000 --> 00:00:09.960
今回は

4
00:00:09.960 --> 00:00:13.023
バックグラウンダーと

5
00:00:15.070 --> 00:00:16.910
そのワークフロー例について

6
00:00:16.910 --> 00:00:20.140
お話していきます

7
00:00:20.140 --> 00:00:22.520
他にはシステム内での

8
00:00:22.520 --> 00:00:26.443
エクストラクトや

9
00:00:29.517 --> 00:00:33.460
非対話型マイクロサービスについてお話します

10
00:00:33.460 --> 00:00:34.950
一番多く話題となるのは

11
00:00:34.950 --> 00:00:37.340
エクストラクトリフレッシュでしょう

12
00:00:37.340 --> 00:00:40.030
サーバーの正常可動に必要とする

13
00:00:40.030 --> 00:00:42.159
ユーザーたちの

14
00:00:42.159 --> 00:00:45.140
定期的なインターバルなどに

15
00:00:45.140 --> 00:00:48.160
関わっています

16
00:00:48.160 --> 00:00:50.838
これに必要なのはエクストラクトリフレッシュや

17
00:00:50.838 --> 00:00:54.788
グループリストシンクロ、アラートや、申込、

18
00:00:54.788 --> 00:00:57.343
ファイル格納関連の仕事がほとんどです

19
00:00:59.630 --> 00:01:02.100
バックグラウンダーと言えば

20
00:01:02.100 --> 00:01:05.090
エクストラクトというイメージもあるので

21
00:01:05.090 --> 00:01:07.470
それから始めていきましょう

22
00:01:07.470 --> 00:01:12.080
定期的にもしくは自動でリフレッシュされる度に、

23
00:01:12.080 --> 00:01:14.350
リポジトリ背景ジョブチャートに

24
00:01:14.350 --> 00:01:15.823
ジョブが一つ作成されます

25
00:01:16.690 --> 00:01:19.160
この仕組みは十秒ごとに

26
00:01:19.160 --> 00:01:21.473
バックグラウンダーがチャートから

27
00:01:21.473 --> 00:01:25.340
処理しなくてはならないジョブをチェックします

28
00:01:25.340 --> 00:01:27.450
リフレッシュタスクを押すと

29
00:01:27.450 --> 00:01:30.075
手の空いているバックグラウンダーが

30
00:01:30.075 --> 00:01:33.670
タスクを処理しレポジトリをアップデートして

31
00:01:33.670 --> 00:01:37.927
状態を"作業中"に変更し必要なデータソースをホワイトリストし

32
00:01:37.927 --> 00:01:40.973
プラットフォームコードを使用してレンダーします

33
00:01:41.810 --> 00:01:45.540
そこからワークブックや出版データソースを使用して

34
00:01:45.540 --> 00:01:48.130
現在のエクストラクトとの

35
00:01:48.130 --> 00:01:51.123
接続情報を検証してくます

36
00:01:53.100 --> 00:01:55.188
エクストラクトのリフレッシュには

37
00:01:55.188 --> 00:01:57.820
まずエクストラクトファイルの

38
00:01:57.820 --> 00:02:01.440
ユーザーセッションエラーなどを

39
00:02:01.440 --> 00:02:03.610
防ぐ為に

40
00:02:03.610 --> 00:02:06.700
新しいファイルを作ります

41
00:02:06.700 --> 00:02:10.140
増分リフレッシュの場合

42
00:02:10.140 --> 00:02:12.700
現在のファイルに添付されてます

43
00:02:12.700 --> 00:02:16.108
フルリフレッシュの場合

44
00:02:16.108 --> 00:02:17.973
現在のファイルを上書きします

45
00:02:18.950 --> 00:02:21.770
新しいファイルはデータ一致のため

46
00:02:21.770 --> 00:02:23.610
現在のファイルと

47
00:02:23.610 --> 00:02:26.570
同じ構造で作成されなくてはなりません

48
00:02:26.570 --> 00:02:29.120
この情報を手に入れる為に

49
00:02:29.120 --> 00:02:33.780
現在のエクストラクトの

50
00:02:33.780 --> 00:02:36.583
メタデータに問いただします

51
00:02:37.420 --> 00:02:41.203
その為にはバックグラウンダーが

52
00:02:43.110 --> 00:02:46.083
データエンジンと連絡しなくてはなりません

53
00:02:46.083 --> 00:02:49.180
データの構造が分かったら新しいデータを用意しましょう

54
00:02:49.180 --> 00:02:52.410
バックグラウンダーは外部データに接続が必要な場合

55
00:02:52.410 --> 00:02:56.040
サーバーで新プロトコルを用意し

56
00:02:56.040 --> 00:03:00.380
必要なクエリを外部に送ります

57
00:03:00.380 --> 00:03:03.400
データを受信すると同時に

58
00:03:03.400 --> 00:03:07.240
データエンジンが起動され

59
00:03:07.240 --> 00:03:10.423
データを一時的ファイルに

60
00:03:11.380 --> 00:03:14.530
送ります

61
00:03:14.530 --> 00:03:18.240
新エクストラクトが完成され

62
00:03:18.240 --> 00:03:21.830
最終位置へアップロードされ

63
00:03:21.830 --> 00:03:26.140
バックグラウンダーがレポジトリのGUIDをアップデートしたら

64
00:03:26.140 --> 00:03:29.113
リフレッシュジョブは完了します

65
00:03:30.680 --> 00:03:32.840
一つ足すとデータソースに接続する為に

66
00:03:32.840 --> 00:03:36.480
毎回プロトコルサーバーを使用するわけではなく

67
00:03:36.480 --> 00:03:38.340
直にデータソースと接続も

68
00:03:38.340 --> 00:03:40.713
可能です

69
00:03:43.600 --> 00:03:46.530
稼働中のユーザーセッションは古いGUIDを使用し続けますが

70
00:03:46.530 --> 00:03:49.530
オリジナルエクストラクトと新しいセッションは

71
00:03:49.530 --> 00:03:53.490
新しいGUIDに移されます

72
00:03:53.490 --> 00:03:56.440
古いGUIDのユーザーセッションが全て無効になれば

73
00:03:56.440 --> 00:03:59.383
古いエクストラクトはリーピング用にマークされます

74
00:04:00.220 --> 00:04:03.500
マルチノード環境では必要な従業員のために

75
00:04:03.500 --> 00:04:06.760
新しいエクストラクトはファイル格納シンクロが

76
00:04:06.760 --> 00:04:08.263
可能になります

77
00:04:10.880 --> 00:04:13.070
ほぼ全員のバックグラウンダーが

78
00:04:13.070 --> 00:04:15.440
求められる役目といえば

79
00:04:15.440 --> 00:04:19.160
レポジトリを通してジョブを決定し

80
00:04:19.160 --> 00:04:24.160
割当し、巣ポーンチャイルドプロセスまたは連絡し、

81
00:04:24.270 --> 00:04:27.183
完了したらレポジトリをアップデートします

82
00:04:28.150 --> 00:04:29.870
例えば申込が

83
00:04:29.870 --> 00:04:31.630
必要と判断された場合には

84
00:04:31.630 --> 00:04:34.510
バックグラウンダーはレポジトリをチェックし

85
00:04:34.510 --> 00:04:38.740
Vizをレンダーし、申請の相手をSTMPサーバーに接続して

86
00:04:38.740 --> 00:04:41.520
Eメールを送り、ジョブを

87
00:04:41.520 --> 00:04:44.753
完了とレポジトリをアップデートしなくてはなりません

88
00:04:45.590 --> 00:04:48.850
詳細には動画に添付されてあるこのタブローから

89
00:04:48.850 --> 00:04:52.563
リクエストページをチェックしてください

90
00:04:54.720 --> 00:04:58.463
それでは非対応マイクロサービスについてお話しましょう

91
00:04:59.390 --> 00:05:01.668
定期的なバックグラウンドリクエストに

92
00:05:01.668 --> 00:05:03.490
こたえるサービスです

93
00:05:03.490 --> 00:05:07.223
手動で変更するのは不可能ですが一まとめになっています

94
00:05:08.090 --> 00:05:12.280
バックグラウンドリクエストには

95
00:05:12.280 --> 00:05:15.653
システムリソースに大きな負荷がかかる可能性があります

96
00:05:16.750 --> 00:05:19.203
非対応マイクロサービスコンテナは

97
00:05:19.203 --> 00:05:22.617
バックグラウンダーのインストール済みのノード一つに付き

98
00:05:22.617 --> 00:05:24.430
一個搭載されます

99
00:05:24.430 --> 00:05:26.350
マイクロサービスの中には

100
00:05:26.350 --> 00:05:28.675
関係インジェスターマイクロサービスや

101
00:05:28.675 --> 00:05:31.910
外部コンテンツプロバイダマイクロサービス、

102
00:05:31.910 --> 00:05:33.760
フロープロバイダマイクロサービス、

103
00:05:33.760 --> 00:05:36.453
コンテンツプロバイダマイクロサービスが含まれます

104
00:05:38.380 --> 00:05:41.989
最後に非対応マイクロサービスのTSMウェブUIと

105
00:05:41.989 --> 00:05:46.040
TSMコマンドラインインタフェース を

106
00:05:46.040 --> 00:05:47.940
見ていきましょう

107
00:05:49.480 --> 00:05:53.370
ウェブUIの場合、ノートの全マイクロサービスが稼動しているなら

108
00:05:53.370 --> 00:05:55.730
緑色のチェックがあります

109
00:05:55.730 --> 00:05:59.570
全部で無く一つでもエラー状態なら

110
00:05:59.570 --> 00:06:01.690
劣化状態になります

111
00:06:01.690 --> 00:06:03.940
全マイクロサービスが停止された場合

112
00:06:03.940 --> 00:06:05.823
エラー状態になります

113
00:06:07.100 --> 00:06:09.350
詳細が必要な場合

114
00:06:09.350 --> 00:06:12.722
TSMCLIがマイクロサービス一つずつ

115
00:06:12.722 --> 00:06:14.930
別のステータスを表示します

116
00:06:14.930 --> 00:06:18.858
特定のマイクロサービスの状態を知りたい場合

117
00:06:18.858 --> 00:06:21.190
コマンドラインインターフェースで

118
00:06:21.190 --> 00:06:22.940
詳細を確認できます

119
00:06:22.940 --> 00:06:25.922
これにてバックグラウンダーと非対応マイクロサービスの

120
00:06:25.922 --> 00:06:27.892
概要は終了です

121
00:06:27.892 --> 00:06:29.162
ありがとうございました

